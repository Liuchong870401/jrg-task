;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-email" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M876.032 819.968 148.032 819.968C101.632 819.968 64 782.4 64 736l0-448c0-46.4 37.632-83.968 84.032-83.968l728 0C922.368 204.032 960 241.6 960 288l0 448C960 782.4 922.368 819.968 876.032 819.968zM902.272 734.528 902.272 289.472 642.624 512 902.272 734.528zM512 568l359.296-307.968L152.64 260.032 512 568zM871.296 764.032l-261.312-224L512 624 414.016 540.032l-261.312 224L871.296 764.032zM381.312 512 121.728 289.472l0 444.992L381.312 512z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-plus" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M513.723738 2.560985c-280.920354 0-509.439015 228.518661-509.439015 509.439015s228.518661 509.439015 509.439015 509.439015 509.439015-228.518661 509.439015-509.439015S794.644092 2.560985 513.723738 2.560985zM513.723738 973.765294c-254.522509 0-461.765294-207.144286-461.765294-461.765294s207.242786-461.765294 461.765294-461.765294c254.719508 0 461.765294 207.144286 461.765294 461.765294S768.443245 973.765294 513.723738 973.765294z"  ></path>' +
    '' +
    '<path d="M546.031548 478.904194 546.031548 291.558292 480.627932 291.558292 480.627932 478.904194 293.282029 478.904194 293.282029 545.095806 480.627932 545.095806 480.627932 732.638707 546.031548 732.638707 546.031548 545.095806 734.362445 545.095806 734.362445 478.904194Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-tell" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M853.054141 692.00263l-133.997853-100.655468c-22.687722-15.401782-48.492434-18.542308-66.997903 0l-39.624463 39.700187c-46.457078-34.749432-98.16781-77.061097-144.599306-123.593899-41.081651-41.156352-77.589123-85.780689-107.992573-126.71089l40.993646-41.081651c18.505469-18.517749 15.364943-44.37158 0-67.11149L300.343951 138.327462c-18.492166-18.544355-48.492434-18.544355-66.9846 0l-66.998927 67.11149c-36.998659 37.060057-19.208481 81.307817 0 134.222981 0 0 92.124164 157.263743 211.221656 276.562826 126.598326 126.835733 274.477328 210.026434 274.477328 210.026434 48.870034 25.177426 96.999195 37.062104 133.994784 0l67.000973-67.135026C871.548354 740.596372 875.502409 707.556884 853.054141 692.00263z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-address" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M512 288c-52.992 0-96 43.008-96 96s43.008 96 96 96 96-43.008 96-96-43.008-96-96-96zM512 448c-35.2 0-64-28.8-64-64s28.8-64 64-64 64 28.8 64 64-28.8 64-64 64zM512 64.8c-176.8 0-320 143.2-320 320 0 68 23.2 129.792 57.6 182.816 69.216 106.4 262.4 391.616 262.4 391.616s193.216-285.216 262.4-391.392c34.4-52.992 57.6-114.816 57.6-182.816 0-176.8-143.2-320.192-320-320.192zM747.616 550.208c-52.992 81.408-180.192 270.016-235.616 351.808-55.392-82.016-182.592-270.4-235.616-351.808-34.816-53.6-52.416-109.184-52.416-165.408 0-76.992 30.016-149.184 84.416-203.584s126.816-84.416 203.616-84.416c76.992 0 149.216 30.016 203.616 84.416s84.384 126.784 84.384 203.584c0 56.384-17.6 112-52.384 165.408z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-iconblog" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M713.364147 393.737526c-10.66899-10.117428-26.632567-11.793604-36.586267-3.937682-10.41828 8.222265-11.218506 24.384363-0.76441 36.400025 11.143805 12.81384 29.772071 15.08865 40.407292 4.801353C726.526935 421.222507 724.673727 404.465868 713.364147 393.737526zM558.264697 375.113353c-10.723226-9.406231-25.740244-10.406001-34.540677-3.1262-8.777921 7.261381-9.43386 21.169135-0.659009 32.107255 9.841136 12.263301 27.52182 16.167215 38.381146 7.274684C572.327994 402.454048 570.293661 385.664663 558.264697 375.113353zM348.3365 345.118202c-8.283664-5.924943-19.270902-5.999644-26.477025-0.620124-8.024767 5.996574-10.809183 18.310018-4.079922 28.869514 8.733918 13.700023 27.180036 16.464997 36.84721 4.125971C362.830609 367.021048 358.50407 352.390839 348.3365 345.118202zM721.274304 191.942567 301.776068 191.942567c-60.884672 0-110.239753 46.934962-110.239753 104.83465L191.536314 483.157091l0 49.891294c2.520403 4.820796 5.54939 9.801227 9.187243 14.764262 19.243273 26.204825 39.740096 49.38578 70.430072 59.047838 30.683836 9.667174 101.047394 26.574239 101.047394 26.574239l45.932122 109.247146c0 0 5.89936 20.660552 24.49795 20.660552 18.593474 0 82.672908-85.622076 82.672908-85.622076s88.832188 23.083741 110.234637 29.525454c21.402449 6.440689 67.084884 16.856923 122.483612-23.616884 45.083801-32.946366 66.095347-62.399165 73.486688-95.095845l0-160.106488L831.508941 296.777217C831.508941 238.876506 782.15693 191.942567 721.274304 191.942567zM357.161493 420.055938c-6.321986 0-36.239366-7.567349-42.650379-21.897729 0 12.248975 0 12.512988 0 12.512988l-29.525454-6.255471-3.278673-143.905504 32.804127 3.12927 0 53.181223c0 0 12.95301-9.384741 29.53057-9.384741 16.570397 0 52.489468 18.342764 52.489468 62.562894C396.532175 414.223093 363.486548 420.055938 357.161493 420.055938zM458.869942 432.568926l-36.08894-6.255471c0 0 0.455371-65.956178 0-93.850481-0.461511-27.894304-16.406668-31.286564-16.406668-31.286564L406.374334 266.768763c47.059805 10.006911 52.495608 46.343491 52.495608 71.952752C458.869942 364.325659 458.869942 432.568926 458.869942 432.568926zM587.30101 440.023712c-28.327162 20.702508-70.952982 11.851932-94.158497-16.400528-21.149693-25.756617-19.516496-60.065004 2.726088-79.235622 23.072485-19.885909 62.521962-18.640546 89.543386 5.446036C615.261828 376.446721 616.886839 418.399205 587.30101 440.023712zM763.979942 482.623949c0 29.41903-22.555715 50.051953-49.213865 50.051953-26.65201 0-29.525454-3.1262-29.525454-3.1262L685.240623 492.00869c0 0 1.158383 3.12927 19.682271 3.12927 18.526959 0 16.406668-34.410718 16.406668-34.410718s-13.210883 12.512988-26.245757 12.512988c-41.270962 0-68.896136-38.670741-68.896136-71.952752s27.994588-53.184293 52.492538-53.184293c24.495904 0 42.650379 18.771529 42.650379 18.771529l0-9.386788 42.650379 3.12927C763.979942 360.615151 763.979942 453.206966 763.979942 482.623949z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)